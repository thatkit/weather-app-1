{"version":3,"sources":["components/Header/Icon/svg/weather.svg","components/Header/Icon/Icon.js","components/Header/Header.js","components/Tiles/Tile/Tile.js","components/Tiles/Tiles.js","components/Btn/Btn.js","components/App/App.js","index.js"],"names":["Icon","props","icons","_01d","_01n","_02d","_02n","_03d","_03n","_04d","_04n","_09d","_09n","_10d","_10n","_11d","_11n","_13d","_13n","_50d","_50n","toggleSVG","bind","this","icon","elId","a","fetch","weatherIcon","res","text","document","getElementById","children","length","insertAdjacentHTML","querySelectorAll","forEach","el","style","display","window","innerWidth","transform","setAttribute","id","Container","React","Component","Header","Row","Col","className","xs","weather","name","coords","lon","lat","Tile","Card","body","outline","color","sm","CardTitle","tag","heading","CardText","value","Tiles","md","includes","sys","country","Math","round","main","temp","String","fromCharCode","humidity","wind","speed","clouds","all","Btn","Button","href","target","App","useState","setCoords","coord","description","deg","setWeather","useEffect","getData","navigator","geolocation","getCurrentPosition","latitude","longitude","apiURL","json","console","log","ReactDOM","render"],"mappings":"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","file":"static/js/main.65f521f5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/weather.224178a1.svg\";","import React from 'react';\r\nimport weatherIcon from './svg/weather.svg';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container } from 'reactstrap';\r\n\r\nexport class Icon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleSVG = this.toggleSVG.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.toggleSVG(this.icons[`_${this.props.icon}`]);\r\n    }\r\n    \r\n    icons = {\r\n        _01d: 'day',\r\n        _01n: 'night',\r\n        _02d: 'cloudy-day-1',\r\n        _02n: 'cloudy-night-1',\r\n        _03d: 'cloudy-day-2',\r\n        _03n: 'cloudy-night-2',\r\n        _04d: 'cloudy-day-3',\r\n        _04n: 'cloudy-night-3',\r\n        _09d: 'rainy-6',\r\n        _09n: 'rainy-6',\r\n        _10d: 'rainy-3',\r\n        _10n: 'rainy-3',\r\n        _11d: 'thunder',\r\n        _11n: 'thunder',\r\n        _13d: 'snowy-3',\r\n        _13n: 'snowy-3',\r\n        _50d: 'cloudy',\r\n        _50n: 'cloudy'\r\n    };\r\n    \r\n    async toggleSVG(elId) {\r\n        const res = await fetch(weatherIcon);\r\n        const text = await res.text();\r\n\r\n        if (document.getElementById('icon').children.length < 1) {\r\n            document\r\n                .getElementById('icon')\r\n                .insertAdjacentHTML(\"afterbegin\", text);\r\n        }\r\n        \r\n        document\r\n            .querySelectorAll('svg#svg-icon > g')\r\n            .forEach(el => {\r\n                el.style.display = 'none';\r\n                if (window.innerWidth > 372) {\r\n                    el.style.transform = 'scale(2)';\r\n                } else if (window.innerWidth > 280) {\r\n                    el.style.transform = 'scale(1.5)';\r\n                    document.getElementById('svg-icon').setAttribute('width', 96);\r\n                    document.getElementById('svg-icon').setAttribute('height', 96);\r\n                } else {\r\n                    el.style.transform = 'scale(1)';\r\n                    document.getElementById('svg-icon').setAttribute('width', 64);\r\n                    document.getElementById('svg-icon').setAttribute('height', 64);\r\n                }\r\n                if (el.id === elId) {\r\n                    el.style.display = 'block';\r\n                }\r\n            });\r\n                    \r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container id=\"icon\" style={{'padding': 0}}></Container>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nimport { Icon } from './Icon/Icon';\r\n\r\nexport const Header = (props) => {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"display-2 mt-4 mb-4\">\r\n                        Weather for your coordinates!\r\n                    </h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs=\"8\">\r\n                    <p className=\"lead\">\r\n                        Your place: {props.weather.name}\r\n                    </p>\r\n                    <p className=\"lead\">\r\n                        Your coordinates: {props.coords.lon}&deg;, {props.coords.lat}&deg;\r\n                    </p>\r\n                    <p className=\"lead\">\r\n                        Your weather:\r\n                    </p>\r\n                </Col>\r\n                <Col xs=\"4\" style={{'padding': 0}}>\r\n                    <Icon\r\n                        icon={props.weather.weather[0].icon}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col, Card, CardTitle, CardText } from 'reactstrap';\r\n\r\nexport const Tile = (props) => {\r\n    return (\r\n        <Card body outline color=\"secondary\" className=\"mt-2 mb-3\">\r\n            <Row>\r\n                <Col xs=\"8\" sm=\"12\">\r\n                    <CardTitle tag=\"h5\">{props.heading}</CardTitle>\r\n                </Col>\r\n                <Col xs=\"4\" sm=\"12\">\r\n                    <CardText>{props.value}</CardText>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    );\r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col } from 'reactstrap';\r\nimport { Tile } from './Tile/Tile';\r\n\r\nexport const Tiles = (props) => {\r\n    \r\n    const fahrenheitCountries = ['US', 'BS', 'KY', 'LR', 'PW', 'FM', 'MH'];\r\n    \r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n                    <Tile \r\n                        heading=\"Temperature\"\r\n                        value={\r\n                            (fahrenheitCountries.includes(props.weather.sys.country) ?\r\n                            Math.round((props.weather.main.temp - 273.15) * 9 / 5 + 32) : \r\n                            Math.round(props.weather.main.temp - 273.15)) \r\n                            + ` ${String.fromCharCode(176)}`\r\n                        }\r\n                    />\r\n                </Col>\r\n                <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n                    <Tile \r\n                        heading=\"Humidity\"\r\n                        value={props.weather.main.humidity + ' %'}\r\n                    />\r\n                </Col>\r\n                <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n                    <Tile \r\n                        heading=\"Wind\"\r\n                        value={props.weather.wind.speed + ' m/s'}\r\n                    />\r\n                </Col>\r\n                <Col xs=\"12\" sm=\"6\" md=\"3\">\r\n                    <Tile \r\n                        heading=\"Clouds\"\r\n                        value={props.weather.clouds.all + ' %'}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport const Btn = () => {\r\n    return (\r\n        <Button \r\n            color=\"secondary\" \r\n            href=\"https://github.com/thatkit/weather-app-1\" \r\n            target=\"_blank\"\r\n            className=\"mt-2\"\r\n        >\r\n            Github\r\n        </Button>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container } from 'reactstrap';\r\n\r\nimport { Header } from '../Header/Header'\r\nimport { Tiles } from '../Tiles/Tiles'\r\nimport { Btn } from '../Btn/Btn'\r\n\r\n// import db from '../../db.json'; // for develompent only\r\n\r\nexport const App = (props) => {\r\n    const [coords, setCoords] = useState({\r\n        lon: 0,\r\n        lat: 0\r\n    });\r\n    const [weather, setWeather] = useState({\r\n        coord: {\r\n            lon: 0,\r\n            lat: 0\r\n        },\r\n        weather: [\r\n            {\r\n                description: '',\r\n                icon: ''\r\n            }\r\n        ],\r\n        main: {\r\n            temp: 0,\r\n            humidity: 0\r\n        },\r\n        wind: {\r\n            speed: 0,\r\n            deg: 0\r\n        },\r\n        clouds: {\r\n            all: 0\r\n        },\r\n        sys: {\r\n            country: ''\r\n        },\r\n        name: ''\r\n    });\r\n    \r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            if ('geolocation' in navigator) {\r\n                navigator.geolocation.getCurrentPosition(async ({ coords }) => {\r\n                    const lat = coords.latitude;\r\n                    const lon = coords.longitude;\r\n                    const apiURL = `/${lat}/${lon}`;\r\n                    const res = await fetch(apiURL);\r\n                    const json = await res.json();\r\n    \r\n                    setWeather(json);\r\n                    setCoords({lon: lon, lat: lat});\r\n                    // setWeather(db); //fake db\r\n                    return null;\r\n                });\r\n            } else {\r\n                console.log('geolocation IS NOT available');\r\n            }\r\n        }    \r\n            \r\n        getData();\r\n    }, [weather]);\r\n    \r\n    return (\r\n        <Container>\r\n            <Header \r\n                weather={weather} \r\n                coords={coords}\r\n            />\r\n            <Tiles weather={weather} />\r\n            <Btn />\r\n        </Container>\r\n      )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { App } from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}